name: Build and Release

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

jobs:
  build_windows:
    permissions:
      contents: write
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install MinGW-w64
        run: choco install mingw -y

      - name: Set PATH for MinGW
        run: echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $env:GITHUB_PATH
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Install fyne CLI
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Generate bundle file
        run: go generate

      - name: Build
        run: fyne package -tags windows
      
      - name: Zip it
        run: Compress-Archive -Path Wipr.exe -DestinationPath Wipr_win-amd64.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Wipr_win-amd64
          path: Wipr_win-amd64.zip

  build_linux:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt update -y
          sudo apt-get install libgl1-mesa-dev xorg-dev libxkbcommon-dev

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Install fyne CLI
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Generate bundle file
        run: go generate

      - name: Build
        run: |
          fyne package -tags linux
          mv wipr.tar.xz Wipr_linux-amd64.tar.xz

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Wipr_linux-amd64
          path: Wipr_linux-amd64.tar.xz

  release:
    needs: [build_windows, build_linux]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Wipr ${{ github.ref_name }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}